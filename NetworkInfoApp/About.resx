<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>